package com.orinoco.schema.cdna

import com.orinoco.commons.ReflectionUtls.getSchemaAsStruct
import org.apache.spark.sql.types.StructType

/**
 * Objective:
 *    This script creates the CustomerDNA case class that will be used to retain CDNA information.
 *
 * Notes:
 *    All fields are derived from C5000 rat-sessionize.
 *    Refer for to that project for more information.
 **/
case class CustomerDNA(
                        cdna_easy_id: Option[String] = None,
                        user_gender: Option[String] = None,
                        user_age: Option[Int] = None,
                        reg_prefecture_desc: Option[String] = None,
                        recent_point_status_desc: Option[String] = None,
                        last_ichiba_order_dt: Option[String] = None,
                        recency_desc: Option[String] = None,
                        ichiba_order_recency_cd: Option[Int] = None,
                        ly_ichiba_valid_order_count: Option[Int] = None,
                        ichiba_ly_valid_purchase_score_cd: Option[Int] = None,
                        reg_region_desc: Option[String] = None,
                        fashion_valid_rf: Option[String] = None,
                        first_login_rakuten_subservice: Option[String] = None,
                        last_login_rakuten_subservice: Option[String] = None,
                        l2y_most_frequent_login_rakuten_subservice: Option[String] = None,
                        ly_most_frequent_login_rakuten_subservice: Option[String] = None,
                        l6m_most_frequent_login_rakuten_subservice: Option[String] = None,
                        l3m_most_frequent_login_rakuten_subservice: Option[String] = None,
                        l1m_most_frequent_login_rakuten_subservice: Option[String] = None,
                        first_point_rakuten_subservice: Option[String] = None,
                        last_point_rakuten_subservice: Option[String] = None,
                        first_earned_point_rakuten_subservice: Option[String] = None,
                        last_earned_point_rakuten_subservice: Option[String] = None,
                        first_used_point_rakuten_subservice: Option[String] = None,
                        last_used_point_rakuten_subservice: Option[String] = None,
                        books_valid_rf: Option[String] = None,
                        moved_within_desc: Option[String] = None,
                        fashion_rf: Option[String] = None,
                        point_service_recency_cd: Option[Int] = None,
                        point_summary_subservice: Option[String] = None,
                        bss_rat_mno_first_access_ts: Option[String] = None,
                        bss_rat_mno_last_access_ts: Option[String] = None,
                        mno_rat_log_first_access_ts: Option[String] = None,
                        mno_rat_log_last_access_ts: Option[String] = None,
                        mno_funnel_stage_desc: Option[String] = None,
                        recent_prchs_date: Option[String] = None,
                        user_city: Option[String] = None,
                        user_rank: Option[String] = None,
                        recent_prchs_code: Option[String] = None,
                        user_category_by_recent_prchs: Option[String] = None,
                        reg_generation_desc: Option[String] = None,
                        reg_postalcode_1: Option[String] = None,
                        reg_postalcode_2: Option[String] = None,
                        is_working_prob: Option[Double] = None,
                        is_not_married_prob: Option[Double] = None,
                        is_married_prob: Option[Double] = None,
                        has_no_child_prob: Option[Double] = None,
                        has_child_prob: Option[Double] = None,
                        is_in_education_prob: Option[Double] = None,
                        is_homemaker_prob: Option[Double] = None,
                        has_child_0_1_prob: Option[Double] = None,
                        has_child_2_6_prob: Option[Double] = None,
                        own_high_school_diploma_prob: Option[Double] = None,
                        own_bachelor_or_graduate_degree_prob: Option[Double] = None,
                        has_pet_prob: Option[Double] = None,
                        has_no_pet_prob: Option[Double] = None,
                        has_car_prob: Option[Double] = None,
                        has_no_car_prob: Option[Double] = None,
                        lives_in_single_family_home_prob: Option[Double] = None,
                        is_home_owner_prob: Option[Double] = None,
                        lives_in_apartment_prob: Option[Double] = None,
                        is_not_home_owner_prob: Option[Double] = None,
                        has_pet_dog_prob: Option[Double] = None,
                        has_pet_cat_prob: Option[Double] = None,
                        play_sport_golf_prob: Option[Double] = None,
                        play_sport_ski_prob: Option[Double] = None,
                        play_sport_swimming_prob: Option[Double] = None,
                        play_sport_cycling_prob: Option[Double] = None,
                        play_sport_running_prob: Option[Double] = None,
                        play_sport_soccer_prob: Option[Double] = None,
                        play_sport_baseball_prob: Option[Double] = None,
                        play_sport_tennis_prob: Option[Double] = None,
                        play_sport_table_tennis_prob: Option[Double] = None,
                        has_own_car_prob: Option[Double] = None,
                        has_no_own_car_prob: Option[Double] = None,
                        has_motorcycle_prob: Option[Double] = None,
                        has_no_motorcycle_prob: Option[Double] = None,
                        has_fullsize_car_prob: Option[Double] = None,
                        has_kei_car_prob: Option[Double] = None,
                        has_car_driving_license_prob: Option[Double] = None,
                        has_motorcycle_driving_license_prob: Option[Double] = None,
                        smoke_cigarette_prob: Option[Double] = None,
                        is_regular_employee_prob: Option[Double] = None,
                        is_executive_officer_prob: Option[Double] = None,
                        is_manager_prob: Option[Double] = None,
                        is_non_manager_prob: Option[Double] = None,
                        is_part_time_worker_prob: Option[Double] = None,
                        has_insurance_prob: Option[Double] = None,
                        has_auto_insurance_prob: Option[Double] = None,
                        has_life_insurance_prob: Option[Double] = None,
                        has_personal_income_over_2m_prob: Option[Double] = None,
                        has_personal_income_over_4m_prob: Option[Double] = None,
                        has_personal_income_over_6m_prob: Option[Double] = None,
                        has_personal_income_over_8m_prob: Option[Double] = None,
                        has_personal_income_over_10m_prob: Option[Double] = None,
                        has_personal_income_over_15m_prob: Option[Double] = None,
                        has_household_income_over_2m_prob: Option[Double] = None,
                        has_household_income_over_4m_prob: Option[Double] = None,
                        has_household_income_over_6m_prob: Option[Double] = None,
                        has_household_income_over_8m_prob: Option[Double] = None,
                        has_household_income_over_10m_prob: Option[Double] = None,
                        has_household_income_over_15m_prob: Option[Double] = None,
                        has_credit_card_prob: Option[Double] = None,
                        has_no_credit_card_prob: Option[Double] = None,
                        has_stock_bond_prob: Option[Double] = None,
                        has_financial_asset_over_5m_prob: Option[Double] = None,
                        has_financial_asset_over_7m_prob: Option[Double] = None,
                        has_financial_asset_over_10m_prob: Option[Double] = None,
                        first_gora_regular_valid_reservation_dt: Option[String] = None,
                        last_gora_regular_valid_reservation_dt: Option[String] = None,
                        first_gora_regular_completed_play_dt: Option[String] = None,
                        last_gora_regular_completed_play_dt: Option[String] = None,
                        first_gora_solo_valid_reservation_dt: Option[String] = None,
                        last_gora_solo_valid_reservation_dt: Option[String] = None,
                        first_gora_solo_completed_play_dt: Option[String] = None,
                        last_gora_solo_completed_play_dt: Option[String] = None,
                        ichiba_loyalty_rf_desc: Option[String] = None,
                        ichiba_loyalty_rf_detail_desc: Option[String] = None,
                        beauty_general_service_recency: Option[String] = None,
                        beauty_hair_service_recency: Option[String] = None,
                        beauty_nail_service_reservation_recency: Option[String] = None,
                        beauty_aesthetic_service_reservation_recency: Option[String] = None,
                        beauty_eyebrow_service_reservation_recency: Option[String] = None,
                        beauty_massage_service_reservation_recency: Option[String] = None
                      )

object CustomerDNA {
  val getFlattenedSchema: StructType = getSchemaAsStruct[CustomerDNA]
  val empty: CustomerDNA = CustomerDNA()
  val nestedFieldList: List[String] = getSchemaAsStruct[CustomerDNA].map(_.name).toList

  // Default derived from original default of user demographic
  val default: CustomerDNA = CustomerDNA.copy(
    ichiba_order_recency_cd = Option(-1), // recent_ichiba_purchase_code - Original UD field
    user_category_by_recent_prchs = Option("New User") // user_category_by_recent_ichiba_purchase - Original UD field
  )
}