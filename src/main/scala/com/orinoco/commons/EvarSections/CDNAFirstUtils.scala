package com.orinoco.commons.EvarSections

import com.orinoco.adapter.sessionize.cache.evar.CDNAFirst
import com.orinoco.schema.cdna.CustomerDNA

object CDNAFirstUtils {
  /**
   * Objective:
   * This script has one main purpose:
   *      1. Grab data to be evarized and apply them appropriately to the CDNAFirst case class.
   * */

  def cdnaFirstGrabber(cdna: CustomerDNA): CDNAFirst = CDNAFirst(
    beauty_aesthetic_service_reservation_recency_f = cdna.beauty_aesthetic_service_reservation_recency,
    beauty_eyebrow_service_reservation_recency_f = cdna.beauty_eyebrow_service_reservation_recency,
    beauty_general_service_recency_f = cdna.beauty_general_service_recency,
    beauty_hair_service_recency_f = cdna.beauty_hair_service_recency,
    beauty_massage_service_reservation_recency_f = cdna.beauty_massage_service_reservation_recency,
    beauty_nail_service_reservation_recency_f = cdna.beauty_nail_service_reservation_recency,
    books_valid_rf_f = cdna.books_valid_rf,
    bss_rat_mno_first_access_ts_f = cdna.bss_rat_mno_first_access_ts,
    bss_rat_mno_last_access_ts_f = cdna.bss_rat_mno_last_access_ts,
    fashion_rf_f = cdna.fashion_rf,
    fashion_valid_rf_f = cdna.fashion_valid_rf,
    first_earned_point_rakuten_subservice_f = cdna.first_earned_point_rakuten_subservice,
    first_gora_regular_completed_play_dt_f = cdna.first_gora_regular_completed_play_dt,
    first_gora_regular_valid_reservation_dt_f = cdna.first_gora_regular_valid_reservation_dt,
    first_gora_solo_completed_play_dt_f = cdna.first_gora_solo_completed_play_dt,
    first_gora_solo_valid_reservation_dt_f = cdna.first_gora_solo_valid_reservation_dt,
    first_login_rakuten_subservice_f = cdna.first_login_rakuten_subservice,
    first_point_rakuten_subservice_f = cdna.first_point_rakuten_subservice,
    first_used_point_rakuten_subservice_f = cdna.first_used_point_rakuten_subservice,
    has_auto_insurance_prob_f = cdna.has_auto_insurance_prob,
    has_car_driving_license_prob_f = cdna.has_car_driving_license_prob,
    has_car_prob_f = cdna.has_car_prob,
    has_child_0_1_prob_f = cdna.has_child_0_1_prob,
    has_child_2_6_prob_f = cdna.has_child_2_6_prob,
    has_child_prob_f = cdna.has_child_prob,
    has_credit_card_prob_f = cdna.has_credit_card_prob,
    has_financial_asset_over_10m_prob_f = cdna.has_financial_asset_over_10m_prob,
    has_financial_asset_over_5m_prob_f = cdna.has_financial_asset_over_5m_prob,
    has_financial_asset_over_7m_prob_f = cdna.has_financial_asset_over_7m_prob,
    has_fullsize_car_prob_f = cdna.has_fullsize_car_prob,
    has_household_income_over_10m_prob_f = cdna.has_household_income_over_10m_prob,
    has_household_income_over_15m_prob_f = cdna.has_household_income_over_15m_prob,
    has_household_income_over_2m_prob_f = cdna.has_household_income_over_2m_prob,
    has_household_income_over_4m_prob_f = cdna.has_household_income_over_4m_prob,
    has_household_income_over_6m_prob_f = cdna.has_household_income_over_6m_prob,
    has_household_income_over_8m_prob_f = cdna.has_household_income_over_8m_prob,
    has_insurance_prob_f = cdna.has_insurance_prob,
    has_kei_car_prob_f = cdna.has_kei_car_prob,
    has_life_insurance_prob_f = cdna.has_life_insurance_prob,
    has_motorcycle_driving_license_prob_f = cdna.has_motorcycle_driving_license_prob,
    has_motorcycle_prob_f = cdna.has_motorcycle_prob,
    has_no_car_prob_f = cdna.has_no_car_prob,
    has_no_child_prob_f = cdna.has_no_child_prob,
    has_no_credit_card_prob_f = cdna.has_no_credit_card_prob,
    has_no_motorcycle_prob_f = cdna.has_no_motorcycle_prob,
    has_no_own_car_prob_f = cdna.has_no_own_car_prob,
    has_no_pet_prob_f = cdna.has_no_pet_prob,
    has_own_car_prob_f = cdna.has_own_car_prob,
    has_personal_income_over_10m_prob_f = cdna.has_personal_income_over_10m_prob,
    has_personal_income_over_15m_prob_f = cdna.has_personal_income_over_15m_prob,
    has_personal_income_over_2m_prob_f = cdna.has_personal_income_over_2m_prob,
    has_personal_income_over_4m_prob_f = cdna.has_personal_income_over_4m_prob,
    has_personal_income_over_6m_prob_f = cdna.has_personal_income_over_6m_prob,
    has_personal_income_over_8m_prob_f = cdna.has_personal_income_over_8m_prob,
    has_pet_cat_prob_f = cdna.has_pet_cat_prob,
    has_pet_dog_prob_f = cdna.has_pet_dog_prob,
    has_pet_prob_f = cdna.has_pet_prob,
    has_stock_bond_prob_f = cdna.has_stock_bond_prob,
    ichiba_loyalty_rf_desc_f = cdna.ichiba_loyalty_rf_desc,
    ichiba_loyalty_rf_detail_desc_f = cdna.ichiba_loyalty_rf_detail_desc,
    ichiba_ly_valid_purchase_score_cd_f = cdna.ichiba_ly_valid_purchase_score_cd,
    ichiba_order_recency_cd_f = cdna.ichiba_order_recency_cd,
    is_executive_officer_prob_f = cdna.is_executive_officer_prob,
    is_homemaker_prob_f = cdna.is_homemaker_prob,
    is_home_owner_prob_f = cdna.is_home_owner_prob,
    is_in_education_prob_f = cdna.is_in_education_prob,
    is_manager_prob_f = cdna.is_manager_prob,
    is_married_prob_f = cdna.is_married_prob,
    is_non_manager_prob_f = cdna.is_non_manager_prob,
    is_not_home_owner_prob_f = cdna.is_not_home_owner_prob,
    is_not_married_prob_f = cdna.is_not_married_prob,
    is_part_time_worker_prob_f = cdna.is_part_time_worker_prob,
    is_regular_employee_prob_f = cdna.is_regular_employee_prob,
    is_working_prob_f = cdna.is_working_prob,
    l1m_most_frequent_login_rakuten_subservice_f = cdna.l1m_most_frequent_login_rakuten_subservice,
    l2y_most_frequent_login_rakuten_subservice_f = cdna.l2y_most_frequent_login_rakuten_subservice,
    l3m_most_frequent_login_rakuten_subservice_f = cdna.l3m_most_frequent_login_rakuten_subservice,
    l6m_most_frequent_login_rakuten_subservice_f = cdna.l6m_most_frequent_login_rakuten_subservice,
    last_earned_point_rakuten_subservice_f = cdna.last_earned_point_rakuten_subservice,
    last_gora_regular_completed_play_dt_f = cdna.last_gora_regular_completed_play_dt,
    last_gora_regular_valid_reservation_dt_f = cdna.last_gora_regular_valid_reservation_dt,
    last_gora_solo_completed_play_dt_f = cdna.last_gora_solo_completed_play_dt,
    last_gora_solo_valid_reservation_dt_f = cdna.last_gora_solo_valid_reservation_dt,
    last_ichiba_order_dt_f = cdna.last_ichiba_order_dt,
    last_login_rakuten_subservice_f = cdna.last_login_rakuten_subservice,
    last_point_rakuten_subservice_f = cdna.last_point_rakuten_subservice,
    last_used_point_rakuten_subservice_f = cdna.last_used_point_rakuten_subservice,
    lives_in_apartment_prob_f = cdna.lives_in_apartment_prob,
    lives_in_single_family_home_prob_f = cdna.lives_in_single_family_home_prob,
    ly_ichiba_valid_order_count_f = cdna.ly_ichiba_valid_order_count,
    ly_most_frequent_login_rakuten_subservice_f = cdna.ly_most_frequent_login_rakuten_subservice,
    mno_funnel_stage_desc_f = cdna.mno_funnel_stage_desc,
    mno_rat_log_first_access_ts_f = cdna.mno_rat_log_first_access_ts,
    mno_rat_log_last_access_ts_f = cdna.mno_rat_log_last_access_ts,
    moved_within_desc_f = cdna.moved_within_desc,
    own_bachelor_or_graduate_degree_prob_f = cdna.own_bachelor_or_graduate_degree_prob,
    own_high_school_diploma_prob_f = cdna.own_high_school_diploma_prob,
    play_sport_baseball_prob_f = cdna.play_sport_baseball_prob,
    play_sport_cycling_prob_f = cdna.play_sport_cycling_prob,
    play_sport_golf_prob_f = cdna.play_sport_golf_prob,
    play_sport_running_prob_f = cdna.play_sport_running_prob,
    play_sport_ski_prob_f = cdna.play_sport_ski_prob,
    play_sport_soccer_prob_f = cdna.play_sport_soccer_prob,
    play_sport_swimming_prob_f = cdna.play_sport_swimming_prob,
    play_sport_table_tennis_prob_f = cdna.play_sport_table_tennis_prob,
    play_sport_tennis_prob_f = cdna.play_sport_tennis_prob,
    point_service_recency_cd_f = cdna.point_service_recency_cd,
    point_summary_subservice_f = cdna.point_summary_subservice,
    recency_desc_f = cdna.recency_desc,
    recent_point_status_desc_f = cdna.recent_point_status_desc,
    reg_generation_desc_f = cdna.reg_generation_desc,
    reg_postalcode_1_f = cdna.reg_postalcode_1,
    reg_postalcode_2_f = cdna.reg_postalcode_2,
    reg_prefecture_desc_f = cdna.reg_prefecture_desc,
    reg_region_desc_f = cdna.reg_region_desc,
    smoke_cigarette_prob_f = cdna.smoke_cigarette_prob
  )
}